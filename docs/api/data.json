{
    "project": {
        "name": "SLib 使用说明文档",
        "description": "SLib 内嵌 Log 类，支持动态加载各模块，配置出适合开发者使用的 slib.pro.js",
        "version": "1.2.1",
        "url": "https://github.com/fsiaonma/SLib"
    },
    "files": {
        "..\\dev\\log\\log.js": {
            "name": "..\\dev\\log\\log.js",
            "modules": {},
            "classes": {
                "sl.log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\dev\\log\\log_mode.js": {
            "name": "..\\dev\\log\\log_mode.js",
            "modules": {},
            "classes": {
                "sl.log_mode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\dev\\native_extend\\array\\array.js": {
            "name": "..\\dev\\native_extend\\array\\array.js",
            "modules": {},
            "classes": {
                "sl.array": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\dev\\native_extend\\object\\object.js": {
            "name": "..\\dev\\native_extend\\object\\object.js",
            "modules": {},
            "classes": {
                "sl.object": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\dev\\native_extend\\extendBase.js": {
            "name": "..\\dev\\native_extend\\extendBase.js",
            "modules": {},
            "classes": {
                "extendBase": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\dev\\sl.js": {
            "name": "..\\dev\\sl.js",
            "modules": {},
            "classes": {
                "sl": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "sl.log": {
            "name": "sl.log",
            "shortname": "sl.log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "..\\dev\\log\\log.js",
            "line": 1,
            "description": "log 类，用于打印信息，分为 debug, info, warnning, error 三类。",
            "is_constructor": 1
        },
        "sl.log_mode": {
            "name": "sl.log_mode",
            "shortname": "sl.log_mode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "..\\dev\\log\\log_mode.js",
            "line": 1,
            "description": "log_mode 类，标记打印日志级别。",
            "is_constructor": 1
        },
        "sl.array": {
            "name": "sl.array",
            "shortname": "sl.array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 1,
            "description": "array 类，数组扩展类",
            "is_constructor": 1
        },
        "sl.object": {
            "name": "sl.object",
            "shortname": "sl.object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "..\\dev\\native_extend\\object\\object.js",
            "line": 1,
            "description": "object 类，对象扩展类",
            "is_constructor": 1
        },
        "extendBase": {
            "name": "extendBase",
            "shortname": "extendBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "..\\dev\\native_extend\\extendBase.js",
            "line": 1,
            "description": "extendBase 类, 原生接口扩展的基类",
            "is_constructor": 1
        },
        "sl": {
            "name": "sl",
            "shortname": "sl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "..\\dev\\sl.js",
            "line": 1,
            "description": "SLib 类, 命名空间，最高层。",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "..\\dev\\log\\log.js",
            "line": 11,
            "description": "打印调试信息",
            "example": [
                " sl.log.d(\"mseeage\") 或 sl.log.debug(\"mseeage\");"
            ],
            "itemtype": "method",
            "name": "debug",
            "class": "sl.log"
        },
        {
            "file": "..\\dev\\log\\log.js",
            "line": 22,
            "description": "打印日志信息",
            "example": [
                " sl.log.i(\"mseeage\") 或 sl.log.info(\"mseeage\");"
            ],
            "itemtype": "method",
            "name": "info",
            "class": "sl.log"
        },
        {
            "file": "..\\dev\\log\\log.js",
            "line": 33,
            "description": "打印警告信息",
            "example": [
                " sl.log.w(\"mseeage\") 或 sl.log.warnning(\"message\");"
            ],
            "itemtype": "method",
            "name": "warnning",
            "class": "sl.log"
        },
        {
            "file": "..\\dev\\log\\log.js",
            "line": 44,
            "description": "打印错误信息",
            "example": [
                " sl.log.e(\"mseeage\") 或 sl.log.error(\"message\");"
            ],
            "itemtype": "method",
            "name": "error",
            "class": "sl.log"
        },
        {
            "file": "..\\dev\\log\\log.js",
            "line": 55,
            "description": "设置打印日志级别，提供给开发者打印等级选择。",
            "example": [
                " sl.log.setMode(sl.log_mode.DEBUG); 或 sl.log.setMode(sl.log_mode.INFO);"
            ],
            "params": [
                {
                    "name": "type",
                    "description": "打印级别，可选项:\n<ul>\n\t\t<li> sl.log_mode.DEBUG </li>\n\t\t<li> sl.log_mode.INFO </li>\n     <li> sl.log_mode.WARN </li>\n     <li> sl.log_mode.ERROR </li>\n</ul> <br />\n详情参见 {{#crossLink \"sl.log_mode\"}}{{/crossLink}}。",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "setMode",
            "class": "sl.log"
        },
        {
            "file": "..\\dev\\log\\log_mode.js",
            "line": 9,
            "description": "调试信息级别代号",
            "itemtype": "property",
            "name": "DEBUG",
            "type": "{Number}",
            "default": "0",
            "class": "sl.log_mode"
        },
        {
            "file": "..\\dev\\log\\log_mode.js",
            "line": 17,
            "description": "日志信息级别代号",
            "itemtype": "property",
            "name": "INFO",
            "type": "{Number}",
            "default": "1",
            "class": "sl.log_mode"
        },
        {
            "file": "..\\dev\\log\\log_mode.js",
            "line": 25,
            "description": "警告信息级别代号",
            "itemtype": "property",
            "name": "WARN",
            "type": "{Number}",
            "default": "2",
            "class": "sl.log_mode"
        },
        {
            "file": "..\\dev\\log\\log_mode.js",
            "line": 33,
            "description": "错误信息级别代号",
            "itemtype": "property",
            "name": "ERROR",
            "type": "{Number}",
            "default": "3",
            "class": "sl.log_mode"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 13,
            "description": "需要处理的数组",
            "itemtype": "property",
            "name": "array",
            "type": "{Array}",
            "default": "[]",
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 21,
            "description": "当数组没有顺序要求时候，该方法能快速删除某一指定下标的数组项",
            "params": [
                {
                    "name": "index",
                    "description": "指定的数组下标",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "qRemoveByIndex",
            "example": [
                " sl.array(arr).qRemoveByIndex(1);"
            ],
            "return": {
                "description": "删除某项后的数组",
                "type": "Array"
            },
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 41,
            "description": "当数组有顺序要求时候，该方法能删除某一指定数组项而不改变数组顺序",
            "params": [
                {
                    "name": "index",
                    "description": "指定的数组下标",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "cRemoveByIndex",
            "example": [
                " sl.array(arr).cRemoveByIndex(1);"
            ],
            "return": {
                "description": "删除某项后的数组",
                "type": "Array"
            },
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 60,
            "description": "随即抽取一数组项",
            "itemtype": "method",
            "name": "random",
            "example": [
                " sl.array(arr).random();"
            ],
            "return": {
                "description": "随即出来的数组项"
            },
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 71,
            "description": "判断数组是否包含某一指定值",
            "params": [
                {
                    "name": "data",
                    "description": "需要判断的键值"
                }
            ],
            "itemtype": "method",
            "name": "isContain",
            "example": [
                " sl.array(arr).isContain(1);"
            ],
            "return": {
                "description": "ture 表述数组包含该特定值，false 则不包含",
                "type": "Bool"
            },
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 82,
            "description": "转换成字符串",
            "itemtype": "method",
            "name": "toString",
            "example": [
                " sl.array(arr).toString();"
            ],
            "return": {
                "description": "转换后的字符串",
                "type": "String"
            },
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\array\\array.js",
            "line": 105,
            "description": "复制数组",
            "itemtype": "method",
            "name": "copy",
            "example": [
                " sl.array(arr).copy();"
            ],
            "return": {
                "description": "复制后的数组",
                "type": "Array"
            },
            "class": "sl.array"
        },
        {
            "file": "..\\dev\\native_extend\\object\\object.js",
            "line": 13,
            "description": "需要处理的对象",
            "itemtype": "property",
            "name": "object",
            "type": "{object}",
            "default": "{}",
            "class": "sl.object"
        },
        {
            "file": "..\\dev\\native_extend\\object\\object.js",
            "line": 21,
            "description": "比较 2 个对象是否相等",
            "params": [
                {
                    "name": "obj",
                    "description": "需要比较的对象",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "equal",
            "example": [
                " sl.object(object).equal(obj);"
            ],
            "return": {
                "description": "ture 表述2对象相等，false 则不相等",
                "type": "Bool"
            },
            "class": "sl.object"
        },
        {
            "file": "..\\dev\\native_extend\\object\\object.js",
            "line": 33,
            "description": "判断对象是否包含某一指定值",
            "params": [
                {
                    "name": "data",
                    "description": "需要判断的键值",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "isContain",
            "example": [
                " sl.object(object).isContain(1);"
            ],
            "return": {
                "description": "ture 表述对象包含该特定值，false 则不包含",
                "type": "Bool"
            },
            "class": "sl.object"
        },
        {
            "file": "..\\dev\\native_extend\\object\\object.js",
            "line": 50,
            "description": "转换成字符串",
            "itemtype": "method",
            "name": "toString",
            "example": [
                " sl.object(object).toString();"
            ],
            "return": {
                "description": "转换后的字符串",
                "type": "String"
            },
            "class": "sl.object"
        },
        {
            "file": "..\\dev\\native_extend\\object\\object.js",
            "line": 73,
            "description": "复制对象",
            "itemtype": "method",
            "name": "clone",
            "example": [
                " sl.object(object).clone();"
            ],
            "return": {
                "description": "复制后的对象",
                "type": "Object"
            },
            "class": "sl.object"
        },
        {
            "file": "..\\dev\\native_extend\\extendBase.js",
            "line": 8,
            "description": "获取参数类型",
            "params": [
                {
                    "name": "需要判断类型的参数",
                    "description": "",
                    "type": "任意"
                }
            ],
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "参数类型",
                "type": "String"
            },
            "example": [
                " sl.base.getType(\"mseeage\") 或 sl.base.getType([1, 2, 3]);"
            ],
            "class": "extendBase"
        }
    ],
    "warnings": []
}